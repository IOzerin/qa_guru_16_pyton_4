# Делаем списки

l = [1, 2, 3, "abc", "bcd", "cde", [4, 5, 6]]

# С элементами из списка можно обращаться как и к символам в строке
print(l[0])
print(l[-1])
print(l[::-1])

# Но можно и обращаться к элементу во вложенном списке или к символу во вложенной строке
print(l[-1][0])
print(l[3][-1])



# В список можно добавить новый элемент
l.append("new element")
# Список можно расширить элементами из другого списка
l.extend([7, 8, 9])
# Можно посмотреть длину списка (общее количество элементов)
print(len(l))
# Можно развернуть список
l.reverse()

# Можно изменить элемент в списке достаточно выбрать
#  элемент по индексу и присвоить новое значение
l[0] = 900

print(l)



# Множества
# Множества содержат только уникальные элементы и у них невозможна сортировка
s = {1, 2, 2, 3, 4, 5, 5, 5, 5}
print(s)

# Множества имеют некоторые особенности которых нет у других типов данных
s1 = {1, 2, 3, 4, 5}
s2 = {1, 2, 3}

# Можно посмотреть пересекающиеся элементы
print(s1.intersection(s2))
# Можно вычитать одно множество из другого
print(s1 - s2)

# Множества могут помочь убрать дубликаты из массивов
array_with_duplicates = [1, 2, 3, 4, 5, 5, 5, 5]
# Конвертировав массив в множество
s_from_array = set(array_with_duplicates)
# и обратно
array_without_duplicates = list(s_from_array)

print(array_without_duplicates)