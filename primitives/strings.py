# Строки
# Строки всегда записываются в кавычках
s = "Hello world!"
s = 'Hello world!'


# Экранирование
# Внутри двойных кавычек можно применять одиночные, а внутри одиночных двойные
# Экранировать возможное еще применяя знак \
s = "Hello 'world!'"
s = '"Hello" world!'
s = "Hello \"world!\""
s = '\'Hello\' world!'

# Так же с целью экранирования можно использовать тройные кавычки
# они могут содержать внутри строку с тем же типом кавычек до двух подряд
s = """Hello '"" world!"""
s = '''Hello ''" world!'''

# Тройные кавычки могут содержать в себе строки с переносами строки
s = '''Hello
world
!'''
print(s)

# Так же перенос строки можно осуществить с помощью \n
s = "Hello\nworld\n!"
print(s)

# Сырые строки
# Как записать строку так, что бы все спецсимволы попали в отображаемый текст
# Первый способ использовать дополнительный \
s = "Hello \\nworld\\n!"
print(s)

# Второй способ поставить перед строкой модификатор r (r - raw(сырой))
s = r"Hello \\nworld\\n!"
print(s)

# Индексы и слайсы
print("---")
print("Индексы и слайсы")
print("---")

email = 'user@domain.com'

# Можно запросить символ из строки по индексу, важно помнить что индексация начинается с 0
print(email[0])
print(email[1])
print(email[2])
print(email[3])

print("---")
# Можно написав минус обращаться к символам с конца, в этом случае начинаем с 1
print(email[-3])
print(email[-2])
print(email[-1])

print("---")
# Можно запросить диапазон символов написав его через :
print(email[0:5])
# Если хотим обратиться к диапазону начиная с начала строки 0 можно не писать
print(email[:4])

print("---")
# Добавив еще одну цифру после двоеточия можно взять из диапазона символы с интервалом
# в данном случае берем каждый второй символ
print(email[0:10:2])

print("---")
# В данном случае не пищем 0 так как хотим взять диапазон начиная с первого символа
# и не пишем вторую цифру что бы взять всю строку до последнего символа,
# а последняя цифра с минусом для того что бы взять каждый первый символ начиная с конца
print(email[::-1])

# Оперируем
print("---")
print("Оперируем")
print("---")

# У строк маса операторов достаточно поставить точку и написать upper
# и все символы можно перевести в верхний регистр
email = email.upper()
print(email)

# Так же строки можно переводить в нижний регистр
email = email.lower()
print(email)

email = email[::2].upper()
print(email)


# Форматируем
print("---")
print("Форматируем")
print("---")

a = "Hello"
b = "World"

print(a + ", " + b + "!")

# Самый продвинутый способ форматирования
print(f"{a}, {b}!")
# Устаревшие способы форматирования
print("{a}, {b}!".format(a=a, b=b))
print("%s, %s!" % (a, b))


# Из строки в число, и наоборот
print("---")
print("Из строки в число, и наоборот")
print("---")

n = 1234
s = "1234"

# Любое число можно привести в строку но не каждую строку можно привести в число
assert n == int(s)
assert str(n) == s